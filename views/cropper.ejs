<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Grouper</title>
    <link href="https://fonts.googleapis.com/css2?family=Staatliches&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed&family=Roboto:wght@100&display=swap" rel="stylesheet">

    <style>
           body {
            margin : 0 auto;
            background : linear-gradient(to top ,  #242424 ,  #4766ff  );
         }
         #title-container {
   
            color : white;
            font-family: 'Staatliches', cursive;
   
   
            background: #242424;
            display: flex;
            flex-direction: row;
  
            justify-content: center;
            align-items: center;

            width : 100%;
            height : 50px
  

        }
        canvas{
            border : 0.5em solid #946cd9;
            margin-top : 5em;
            margin-bottom: 2em;
            border-radius: 2em;
        }
        #range{
         -webkit-appearance: none;
         width: 30%;
         height: 15px;
         border-radius: 5px;  
         background: #d3d3d3;
         outline: none;
         opacity: 0.7;
        -webkit-transition: .2s;
         transition: opacity .2s;
         margin-bottom: 3em;
        }
        #range::-webkit-slider-thumb {
        -webkit-appearance: none;
         appearance: none;
         width: 25px;
         height: 25px;
         border-radius: 50%; 
         background: #914dff;
         cursor: pointer;
    }
    #crop-container{
      background: #242424;
      margin-top: 3em;
      display : flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

        </style>
</head>
<body>
      
    <header>
      <div id = "title-container" class = "container">
        <h1 id = "title">Grouper</h1>
        </div>

       </header>
       <main>
         
         <div id = "crop-container" class = "container">
          <p id = "path"><%=path%></p>
            
             <input type = "range" min = "0" max = "100" value = "0" id = "range"/>
             </div>

             <div id = "set-btn-container">
               
               </div>
        
        
           </main>


    

<script>
  

 let canvas;
 let ctx;
 let image;
 let dragging = false;
 let mouseX;
 let mouseY;
 let cropWidth = 0;
 let cropHeight = 0;
 let currentEvent;
 let prevEvent;
 let movementX;
 let movementY;
 let prevX;
 let prevY;
 

 image = new Image();

 image.onload = function(){
 
 canvas = document.createElement('canvas');
 canvas.width = image.naturalWidth;
 canvas.height = image.naturalHeight;

 ctx = canvas.getContext('2d');

 ctx.drawImage(image , 0 , 0 , image.naturalWidth , image.naturalHeight)

 
 
 canvas.addEventListener('mousedown' , function(event){

  dragging = true;

  

  mouseX = event.x - 150;
  mouseY = event.y - 170;

  
  
 
 });
 canvas.addEventListener('mouseup' , function(){

dragging = false;
cropWidth = 0;
cropHeight = 0;



});

document.documentElement.onmousemove = function(event){

 currentEvent = event;

}

setInterval(function(){

if(prevEvent && currentEvent)
{
   movementX = Math.abs(currentEvent.screenX - prevEvent.screenX);
   movementY = Math.abs(currentEvent.screenY - prevEvent.screenY);
  
}

prevEvent = currentEvent;

},100);


canvas.addEventListener('mousemove' , function(event){
 
  
  if(dragging)
  {

  if(movementX == 0 && movementY == 0)
  {  
    prevX = event.x;
    prevY = event.y;
    console.log(prevX , prevY);
  }

  if(event.x < prevX)
  {
    cropWidth -=movementX;
  }
  if(event.y < prevY)
  {
    cropHeight -=movementY;
  }
  if(event.x > prevX)
  {
    cropWidth +=movementX;
  }
  if(event.y > prevY)
  {
    cropHeight +=movementY;
  }

     

     ctx.clearRect(0 , 0 , canvas.width , canvas.height);
     ctx.drawImage(image , 0 , 0 , image.naturalWidth , image.naturalHeight);
     ctx.fillStyle = 'rgba(138, 138, 138 , 0.6)';
     ctx.fillRect(mouseX, mouseY , cropWidth , cropHeight);

  }
   

});







document.getElementById('crop-container').appendChild(canvas);




 
 
 };

 image.src = document.getElementById('path').innerHTML;

 


 


  
  

    </script>
</body>
</html>